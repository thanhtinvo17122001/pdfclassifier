#! /usr/bin/env python
import sys
import os
import argparse
import pickle

_current_dir = os.path.abspath(os.path.dirname(__file__))
PROJECT_ROOT = os.path.normpath(os.path.join(_current_dir, ".."))
sys.path.append(PROJECT_ROOT)

from mylib.config import config
evademl_dir = config.get('evademl', 'project_path')
sys.path.append(evademl_dir)

from classifiers.cuckoo_wrapper import cuckoo


def parse_args():
    parser = argparse.ArgumentParser(description='Check cuckoo oracle for the PDFs generated by reverse mimicry.')
    parser.add_argument('--var_dir', type=str, help='Variant files directory.', required=True)
    return parser.parse_args()

def main(args):
    cuckoo_seed_sigs = pickle.load(open('/home/yz/code/EvadeML/utils/36vms_sigs.pickle'))
    fout = open('cuckoo_test_files.tsv', 'w')
    # for every file under var_dir, get sha1, test cuckoo oracle, compare if it's consistent with the signature
    for fname in os.listdir(args.var_dir):
        sha1 = fname.split('_')[0]
        expected_sig = cuckoo_seed_sigs[sha1]
        full_fname = os.path.join(args.var_dir, fname)
        # check cuckoo result for this file.
        results = cuckoo([full_fname])
        sig = results[0]
        if len(set(eval(sig)).intersection(set(eval(expected_sig)))) > 0:
            content = '%s\tmalicious\n' % fname
        else:
            content = '%s\tbenign\n' % fname
        fout.write(content)
        fout.flush()
    fout.close()

if __name__=='__main__':
    args = parse_args()
    main(args)

